//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TRMAudiostem.TRMWebServiceJson {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TRMAudiostem.TRMWebServiceJson.Business))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TRMAudiostem.TRMWebServiceJson.Artist))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TRMAudiostem.TRMWebServiceJson.Admin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TRMAudiostem.TRMWebServiceJson.Customer))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.User.UserTypeList UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.User.UserTypeList UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="User.UserTypeList", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
        public enum UserTypeList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Admin = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Artist = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Business = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Customer = 4,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Business", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Business : TRMAudiostem.TRMWebServiceJson.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.BusinessType BusinessTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.BusinessUser BusinessUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Playlist[] PlaylistCollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.BusinessType BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.BusinessUser BusinessUser {
            get {
                return this.BusinessUserField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUserField, value) != true)) {
                    this.BusinessUserField = value;
                    this.RaisePropertyChanged("BusinessUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Playlist[] PlaylistCollection {
            get {
                return this.PlaylistCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaylistCollectionField, value) != true)) {
                    this.PlaylistCollectionField = value;
                    this.RaisePropertyChanged("PlaylistCollection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Artist", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Artist : TRMAudiostem.TRMWebServiceJson.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Album[] AlbumCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MySpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Song[] SongCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoundCloudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TermsAndConditionsAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwitterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Album[] AlbumCollection {
            get {
                return this.AlbumCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumCollectionField, value) != true)) {
                    this.AlbumCollectionField = value;
                    this.RaisePropertyChanged("AlbumCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facebook {
            get {
                return this.FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookField, value) != true)) {
                    this.FacebookField = value;
                    this.RaisePropertyChanged("Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollection {
            get {
                return this.GenreCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreCollectionField, value) != true)) {
                    this.GenreCollectionField = value;
                    this.RaisePropertyChanged("GenreCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MySpace {
            get {
                return this.MySpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.MySpaceField, value) != true)) {
                    this.MySpaceField = value;
                    this.RaisePropertyChanged("MySpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Song[] SongCollection {
            get {
                return this.SongCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SongCollectionField, value) != true)) {
                    this.SongCollectionField = value;
                    this.RaisePropertyChanged("SongCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoundCloud {
            get {
                return this.SoundCloudField;
            }
            set {
                if ((object.ReferenceEquals(this.SoundCloudField, value) != true)) {
                    this.SoundCloudField = value;
                    this.RaisePropertyChanged("SoundCloud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TermsAndConditionsAccepted {
            get {
                return this.TermsAndConditionsAcceptedField;
            }
            set {
                if ((this.TermsAndConditionsAcceptedField.Equals(value) != true)) {
                    this.TermsAndConditionsAcceptedField = value;
                    this.RaisePropertyChanged("TermsAndConditionsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Twitter {
            get {
                return this.TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterField, value) != true)) {
                    this.TwitterField = value;
                    this.RaisePropertyChanged("Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="UserId")]
        public int UserId1 {
            get {
                return this.UserId1Field;
            }
            set {
                if ((this.UserId1Field.Equals(value) != true)) {
                    this.UserId1Field = value;
                    this.RaisePropertyChanged("UserId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Admin : TRMAudiostem.TRMWebServiceJson.User {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Customer : TRMAudiostem.TRMWebServiceJson.User {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessType", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class BusinessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessTypeId {
            get {
                return this.BusinessTypeIdField;
            }
            set {
                if ((this.BusinessTypeIdField.Equals(value) != true)) {
                    this.BusinessTypeIdField = value;
                    this.RaisePropertyChanged("BusinessTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessTypeName {
            get {
                return this.BusinessTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeNameField, value) != true)) {
                    this.BusinessTypeNameField = value;
                    this.RaisePropertyChanged("BusinessTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUser", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class BusinessUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessTypeId {
            get {
                return this.BusinessTypeIdField;
            }
            set {
                if ((this.BusinessTypeIdField.Equals(value) != true)) {
                    this.BusinessTypeIdField = value;
                    this.RaisePropertyChanged("BusinessTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessUserId {
            get {
                return this.BusinessUserIdField;
            }
            set {
                if ((this.BusinessUserIdField.Equals(value) != true)) {
                    this.BusinessUserIdField = value;
                    this.RaisePropertyChanged("BusinessUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Playlist", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Playlist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaylistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaylistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.PlaylistSong[] PlaylistSongCollectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaylistId {
            get {
                return this.PlaylistIdField;
            }
            set {
                if ((this.PlaylistIdField.Equals(value) != true)) {
                    this.PlaylistIdField = value;
                    this.RaisePropertyChanged("PlaylistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaylistName {
            get {
                return this.PlaylistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaylistNameField, value) != true)) {
                    this.PlaylistNameField = value;
                    this.RaisePropertyChanged("PlaylistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.PlaylistSong[] PlaylistSongCollection {
            get {
                return this.PlaylistSongCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaylistSongCollectionField, value) != true)) {
                    this.PlaylistSongCollectionField = value;
                    this.RaisePropertyChanged("PlaylistSongCollection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaylistSong", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class PlaylistSong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaylistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaylistSongIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaylistId {
            get {
                return this.PlaylistIdField;
            }
            set {
                if ((this.PlaylistIdField.Equals(value) != true)) {
                    this.PlaylistIdField = value;
                    this.RaisePropertyChanged("PlaylistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaylistSongId {
            get {
                return this.PlaylistSongIdField;
            }
            set {
                if ((this.PlaylistSongIdField.Equals(value) != true)) {
                    this.PlaylistSongIdField = value;
                    this.RaisePropertyChanged("PlaylistSongId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongId {
            get {
                return this.SongIdField;
            }
            set {
                if ((this.SongIdField.Equals(value) != true)) {
                    this.SongIdField = value;
                    this.RaisePropertyChanged("SongId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Album : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumProducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlbumReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumCover {
            get {
                return this.AlbumCoverField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumCoverField, value) != true)) {
                    this.AlbumCoverField = value;
                    this.RaisePropertyChanged("AlbumCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumLabel {
            get {
                return this.AlbumLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumLabelField, value) != true)) {
                    this.AlbumLabelField = value;
                    this.RaisePropertyChanged("AlbumLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumProducer {
            get {
                return this.AlbumProducerField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumProducerField, value) != true)) {
                    this.AlbumProducerField = value;
                    this.RaisePropertyChanged("AlbumProducer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlbumReleaseDate {
            get {
                return this.AlbumReleaseDateField;
            }
            set {
                if ((this.AlbumReleaseDateField.Equals(value) != true)) {
                    this.AlbumReleaseDateField = value;
                    this.RaisePropertyChanged("AlbumReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumTitle {
            get {
                return this.AlbumTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumTitleField, value) != true)) {
                    this.AlbumTitleField = value;
                    this.RaisePropertyChanged("AlbumTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollection {
            get {
                return this.GenreCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreCollectionField, value) != true)) {
                    this.GenreCollectionField = value;
                    this.RaisePropertyChanged("GenreCollection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Song", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Song : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Album[] AlbumCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SongComposerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SongReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SongTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Album[] AlbumCollection {
            get {
                return this.AlbumCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumCollectionField, value) != true)) {
                    this.AlbumCollectionField = value;
                    this.RaisePropertyChanged("AlbumCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Genre[] GenreCollection {
            get {
                return this.GenreCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreCollectionField, value) != true)) {
                    this.GenreCollectionField = value;
                    this.RaisePropertyChanged("GenreCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SongComposer {
            get {
                return this.SongComposerField;
            }
            set {
                if ((object.ReferenceEquals(this.SongComposerField, value) != true)) {
                    this.SongComposerField = value;
                    this.RaisePropertyChanged("SongComposer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongId {
            get {
                return this.SongIdField;
            }
            set {
                if ((this.SongIdField.Equals(value) != true)) {
                    this.SongIdField = value;
                    this.RaisePropertyChanged("SongId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SongReleaseDate {
            get {
                return this.SongReleaseDateField;
            }
            set {
                if ((this.SongReleaseDateField.Equals(value) != true)) {
                    this.SongReleaseDateField = value;
                    this.RaisePropertyChanged("SongReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SongTitle {
            get {
                return this.SongTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SongTitleField, value) != true)) {
                    this.SongTitleField = value;
                    this.RaisePropertyChanged("SongTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Payment[] PaymentCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.PurchasedSong[] PurchasedSongCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeId {
            get {
                return this.AccountTypeIdField;
            }
            set {
                if ((this.AccountTypeIdField.Equals(value) != true)) {
                    this.AccountTypeIdField = value;
                    this.RaisePropertyChanged("AccountTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Credits {
            get {
                return this.CreditsField;
            }
            set {
                if ((this.CreditsField.Equals(value) != true)) {
                    this.CreditsField = value;
                    this.RaisePropertyChanged("Credits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Payment[] PaymentCollection {
            get {
                return this.PaymentCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentCollectionField, value) != true)) {
                    this.PaymentCollectionField = value;
                    this.RaisePropertyChanged("PaymentCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.PurchasedSong[] PurchasedSongCollection {
            get {
                return this.PurchasedSongCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasedSongCollectionField, value) != true)) {
                    this.PurchasedSongCollectionField = value;
                    this.RaisePropertyChanged("PurchasedSongCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Account.AccountTypeList", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
        public enum AccountTypeList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            admin = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            customer = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            artist = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            business = 4,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Payment.PaymentStatusList PaymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PaymentTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Payment.PaymentTypeList PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Payment.PaymentStatusList PaymentStatus {
            get {
                return this.PaymentStatusField;
            }
            set {
                if ((this.PaymentStatusField.Equals(value) != true)) {
                    this.PaymentStatusField = value;
                    this.RaisePropertyChanged("PaymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentStatusId {
            get {
                return this.PaymentStatusIdField;
            }
            set {
                if ((this.PaymentStatusIdField.Equals(value) != true)) {
                    this.PaymentStatusIdField = value;
                    this.RaisePropertyChanged("PaymentStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PaymentTotal {
            get {
                return this.PaymentTotalField;
            }
            set {
                if ((this.PaymentTotalField.Equals(value) != true)) {
                    this.PaymentTotalField = value;
                    this.RaisePropertyChanged("PaymentTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Payment.PaymentTypeList PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentTypeId {
            get {
                return this.PaymentTypeIdField;
            }
            set {
                if ((this.PaymentTypeIdField.Equals(value) != true)) {
                    this.PaymentTypeIdField = value;
                    this.RaisePropertyChanged("PaymentTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.PaymentStatusList", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
        public enum PaymentStatusList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Processing = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Cancelled = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Approved = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rejected = 4,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Payment.PaymentTypeList", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
        public enum PaymentTypeList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Paypal = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchasedSong", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class PurchasedSong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Business BusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustmomerAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Account CustomerAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatePurchasedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaylistSongIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurchasedSongIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Business Business {
            get {
                return this.BusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessField, value) != true)) {
                    this.BusinessField = value;
                    this.RaisePropertyChanged("Business");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessId {
            get {
                return this.BusinessIdField;
            }
            set {
                if ((this.BusinessIdField.Equals(value) != true)) {
                    this.BusinessIdField = value;
                    this.RaisePropertyChanged("BusinessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustmomerAccountId {
            get {
                return this.CustmomerAccountIdField;
            }
            set {
                if ((this.CustmomerAccountIdField.Equals(value) != true)) {
                    this.CustmomerAccountIdField = value;
                    this.RaisePropertyChanged("CustmomerAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Account CustomerAccount {
            get {
                return this.CustomerAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAccountField, value) != true)) {
                    this.CustomerAccountField = value;
                    this.RaisePropertyChanged("CustomerAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePurchased {
            get {
                return this.DatePurchasedField;
            }
            set {
                if ((this.DatePurchasedField.Equals(value) != true)) {
                    this.DatePurchasedField = value;
                    this.RaisePropertyChanged("DatePurchased");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaylistSongId {
            get {
                return this.PlaylistSongIdField;
            }
            set {
                if ((this.PlaylistSongIdField.Equals(value) != true)) {
                    this.PlaylistSongIdField = value;
                    this.RaisePropertyChanged("PlaylistSongId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurchasedSongId {
            get {
                return this.PurchasedSongIdField;
            }
            set {
                if ((this.PurchasedSongIdField.Equals(value) != true)) {
                    this.PurchasedSongIdField = value;
                    this.RaisePropertyChanged("PurchasedSongId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HttpPostedFileBase", Namespace="http://schemas.datacontract.org/2004/07/System.Web")]
    [System.SerializableAttribute()]
    public partial class HttpPostedFileBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaAsset", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class MediaAsset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaAssetFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetFileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.MediaAssetFormat MediaAssetFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetFormatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.MediaAssetLocation MediaAssetLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.MediaAssetType MediaAssetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetDuration {
            get {
                return this.MediaAssetDurationField;
            }
            set {
                if ((this.MediaAssetDurationField.Equals(value) != true)) {
                    this.MediaAssetDurationField = value;
                    this.RaisePropertyChanged("MediaAssetDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaAssetFileName {
            get {
                return this.MediaAssetFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetFileNameField, value) != true)) {
                    this.MediaAssetFileNameField = value;
                    this.RaisePropertyChanged("MediaAssetFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetFileSize {
            get {
                return this.MediaAssetFileSizeField;
            }
            set {
                if ((this.MediaAssetFileSizeField.Equals(value) != true)) {
                    this.MediaAssetFileSizeField = value;
                    this.RaisePropertyChanged("MediaAssetFileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.MediaAssetFormat MediaAssetFormat {
            get {
                return this.MediaAssetFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetFormatField, value) != true)) {
                    this.MediaAssetFormatField = value;
                    this.RaisePropertyChanged("MediaAssetFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetFormatId {
            get {
                return this.MediaAssetFormatIdField;
            }
            set {
                if ((this.MediaAssetFormatIdField.Equals(value) != true)) {
                    this.MediaAssetFormatIdField = value;
                    this.RaisePropertyChanged("MediaAssetFormatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetId {
            get {
                return this.MediaAssetIdField;
            }
            set {
                if ((this.MediaAssetIdField.Equals(value) != true)) {
                    this.MediaAssetIdField = value;
                    this.RaisePropertyChanged("MediaAssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.MediaAssetLocation MediaAssetLocation {
            get {
                return this.MediaAssetLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetLocationField, value) != true)) {
                    this.MediaAssetLocationField = value;
                    this.RaisePropertyChanged("MediaAssetLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.MediaAssetType MediaAssetType {
            get {
                return this.MediaAssetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetTypeField, value) != true)) {
                    this.MediaAssetTypeField = value;
                    this.RaisePropertyChanged("MediaAssetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetTypeId {
            get {
                return this.MediaAssetTypeIdField;
            }
            set {
                if ((this.MediaAssetTypeIdField.Equals(value) != true)) {
                    this.MediaAssetTypeIdField = value;
                    this.RaisePropertyChanged("MediaAssetTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaAssetFormat", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class MediaAssetFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetFormatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaAssetFormatNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetFormatId {
            get {
                return this.MediaAssetFormatIdField;
            }
            set {
                if ((this.MediaAssetFormatIdField.Equals(value) != true)) {
                    this.MediaAssetFormatIdField = value;
                    this.RaisePropertyChanged("MediaAssetFormatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaAssetFormatName {
            get {
                return this.MediaAssetFormatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetFormatNameField, value) != true)) {
                    this.MediaAssetFormatNameField = value;
                    this.RaisePropertyChanged("MediaAssetFormatName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaAssetLocation", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class MediaAssetLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TRMAudiostem.TRMWebServiceJson.Protocol ProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProtocolIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetId {
            get {
                return this.MediaAssetIdField;
            }
            set {
                if ((this.MediaAssetIdField.Equals(value) != true)) {
                    this.MediaAssetIdField = value;
                    this.RaisePropertyChanged("MediaAssetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetLocationId {
            get {
                return this.MediaAssetLocationIdField;
            }
            set {
                if ((this.MediaAssetLocationIdField.Equals(value) != true)) {
                    this.MediaAssetLocationIdField = value;
                    this.RaisePropertyChanged("MediaAssetLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TRMAudiostem.TRMWebServiceJson.Protocol Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProtocolId {
            get {
                return this.ProtocolIdField;
            }
            set {
                if ((this.ProtocolIdField.Equals(value) != true)) {
                    this.ProtocolIdField = value;
                    this.RaisePropertyChanged("ProtocolId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaAssetType", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class MediaAssetType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaAssetTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaAssetTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaAssetTypeId {
            get {
                return this.MediaAssetTypeIdField;
            }
            set {
                if ((this.MediaAssetTypeIdField.Equals(value) != true)) {
                    this.MediaAssetTypeIdField = value;
                    this.RaisePropertyChanged("MediaAssetTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaAssetTypeName {
            get {
                return this.MediaAssetTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaAssetTypeNameField, value) != true)) {
                    this.MediaAssetTypeNameField = value;
                    this.RaisePropertyChanged("MediaAssetTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Protocol", Namespace="http://schemas.datacontract.org/2004/07/DomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class Protocol : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProtocolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProtocolId {
            get {
                return this.ProtocolIdField;
            }
            set {
                if ((this.ProtocolIdField.Equals(value) != true)) {
                    this.ProtocolIdField = value;
                    this.RaisePropertyChanged("ProtocolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolName {
            get {
                return this.ProtocolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolNameField, value) != true)) {
                    this.ProtocolNameField = value;
                    this.RaisePropertyChanged("ProtocolName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TRMWebServiceJson.ITRMWCFWebServiceJson")]
    public interface ITRMWCFWebServiceJson {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SaveUserAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SaveUserAccountResponse")]
        bool SaveUserAccount(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SaveUserAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SaveUserAccountResponse")]
        System.Threading.Tasks.Task<bool> SaveUserAccountAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetUserAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetUserAccountResponse")]
        TRMAudiostem.TRMWebServiceJson.Account GetUserAccount(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetUserAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetUserAccountResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Account> GetUserAccountAsync(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAccountResponse")]
        bool DeleteAccount(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAccount", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAccountResponse")]
        System.Threading.Tasks.Task<bool> DeleteAccountAsync(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllArtists", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllArtistsResponse")]
        TRMAudiostem.TRMWebServiceJson.Artist[] GetAllArtists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllArtists", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllArtistsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Artist[]> GetAllArtistsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SaveArtistAlbum", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SaveArtistAlbumResponse")]
        bool SaveArtistAlbum(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SaveArtistAlbum", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SaveArtistAlbumResponse")]
        System.Threading.Tasks.Task<bool> SaveArtistAlbumAsync(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbums", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumsResponse")]
        TRMAudiostem.TRMWebServiceJson.Album[] GetArtistAlbums(TRMAudiostem.TRMWebServiceJson.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbums", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Album[]> GetArtistAlbumsAsync(TRMAudiostem.TRMWebServiceJson.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumDetails", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumDetailsResponse")]
        TRMAudiostem.TRMWebServiceJson.Album GetArtistAlbumDetails(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumDetails", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistAlbumDetailsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Album> GetArtistAlbumDetailsAsync(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteArtistAlbum", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteArtistAlbumResponse")]
        bool DeleteArtistAlbum(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteArtistAlbum", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteArtistAlbumResponse")]
        System.Threading.Tasks.Task<bool> DeleteArtistAlbumAsync(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateAlbumGenreCollection", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateAlbumGenreCollectionResponse")]
        bool UpdateAlbumGenreCollection(int albumId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateAlbumGenreCollection", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateAlbumGenreCollectionResponse")]
        System.Threading.Tasks.Task<bool> UpdateAlbumGenreCollectionAsync(int albumId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UploadSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UploadSongResponse")]
        bool UploadSong(TRMAudiostem.TRMWebServiceJson.Song song, string filePath, string ext, string folderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UploadSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UploadSongResponse")]
        System.Threading.Tasks.Task<bool> UploadSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, string filePath, string ext, string folderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DownloadSongOnServer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DownloadSongOnServerResponse")]
        string DownloadSongOnServer(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DownloadSongOnServer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DownloadSongOnServerResponse")]
        System.Threading.Tasks.Task<string> DownloadSongOnServerAsync(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DownloadFile", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DownloadFileResponse")]
        System.IO.Stream DownloadFile(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DownloadFile", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DownloadFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllSongsResponse")]
        TRMAudiostem.TRMWebServiceJson.Song[] GetAllSongs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllSongsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetAllSongsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAlbumSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAlbumSongsResponse")]
        TRMAudiostem.TRMWebServiceJson.Song[] GetAlbumSongs(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAlbumSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAlbumSongsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetAlbumSongsAsync(int albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongsResponse")]
        TRMAudiostem.TRMWebServiceJson.Song[] GetArtistSongs(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongs", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetArtistSongsAsync(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongDetails", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongDetailsResponse")]
        TRMAudiostem.TRMWebServiceJson.Song GetArtistSongDetails(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongDetails", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistSongDetailsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song> GetArtistSongDetailsAsync(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssets", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsResponse")]
        TRMAudiostem.TRMWebServiceJson.MediaAsset[] GetSongMediaAssets(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssets", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.MediaAsset[]> GetSongMediaAssetsAsync(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsForDownload", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsForDownloadResponse")]
        TRMAudiostem.TRMWebServiceJson.MediaAsset[] GetSongMediaAssetsForDownload(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsForDownload", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetSongMediaAssetsForDownloadResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.MediaAsset[]> GetSongMediaAssetsForDownloadAsync(int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteSongResponse")]
        bool DeleteSong(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteSongResponse")]
        System.Threading.Tasks.Task<bool> DeleteSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAlbumSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAlbumSongResponse")]
        bool DeleteAlbumSong(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAlbumSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteAlbumSongResponse")]
        System.Threading.Tasks.Task<bool> DeleteAlbumSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinesses", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessesResponse")]
        TRMAudiostem.TRMWebServiceJson.Business[] GetAllBusinesses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinesses", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessesResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Business[]> GetAllBusinessesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SavePlaylist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SavePlaylistResponse")]
        bool SavePlaylist(int wordpressUserId, TRMAudiostem.TRMWebServiceJson.Playlist playlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/SavePlaylist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/SavePlaylistResponse")]
        System.Threading.Tasks.Task<bool> SavePlaylistAsync(int wordpressUserId, TRMAudiostem.TRMWebServiceJson.Playlist playlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistResponse")]
        bool DeletePlaylist(int playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistResponse")]
        System.Threading.Tasks.Task<bool> DeletePlaylistAsync(int playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistSongResponse")]
        bool DeletePlaylistSong(int songId, int playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistSong", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeletePlaylistSongResponse")]
        System.Threading.Tasks.Task<bool> DeletePlaylistSongAsync(int songId, int playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessTypes", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessTypesResponse")]
        TRMAudiostem.TRMWebServiceJson.BusinessType[] GetAllBusinessTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessTypes", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllBusinessTypesResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.BusinessType[]> GetAllBusinessTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllGenres", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllGenresResponse")]
        TRMAudiostem.TRMWebServiceJson.Genre[] GetAllGenres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAllGenres", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAllGenresResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Genre[]> GetAllGenresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetGenre", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetGenreResponse")]
        TRMAudiostem.TRMWebServiceJson.Genre GetGenre(int genreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetGenre", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetGenreResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Genre> GetGenreAsync(int genreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterAdmin", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterAdminResponse")]
        bool RegisterAdmin(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterAdmin", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterAdminResponse")]
        System.Threading.Tasks.Task<bool> RegisterAdminAsync(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterArtist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterArtistResponse")]
        bool RegisterArtist(TRMAudiostem.TRMWebServiceJson.Artist user, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterArtist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterArtistResponse")]
        System.Threading.Tasks.Task<bool> RegisterArtistAsync(TRMAudiostem.TRMWebServiceJson.Artist user, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterBusiness", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterBusinessResponse")]
        bool RegisterBusiness(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterBusiness", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterBusinessResponse")]
        System.Threading.Tasks.Task<bool> RegisterBusinessAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterCustomer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterCustomerResponse")]
        bool RegisterCustomer(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/RegisterCustomer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/RegisterCustomerResponse")]
        System.Threading.Tasks.Task<bool> RegisterCustomerAsync(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateBusinessUser", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateBusinessUserResponse")]
        bool UpdateBusinessUser(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateBusinessUser", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateBusinessUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateBusinessUserAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateArtistGenreCollection", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateArtistGenreCollectionResponse")]
        bool UpdateArtistGenreCollection(int userId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/UpdateArtistGenreCollection", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/UpdateArtistGenreCollectionResponse")]
        System.Threading.Tasks.Task<bool> UpdateArtistGenreCollectionAsync(int userId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetUserByUserId", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetUserByUserIdResponse")]
        TRMAudiostem.TRMWebServiceJson.User GetUserByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetUserByUserId", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetUserByUserIdResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.User> GetUserByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAdmin", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAdminResponse")]
        TRMAudiostem.TRMWebServiceJson.Admin GetAdmin(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetAdmin", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetAdminResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Admin> GetAdminAsync(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistResponse")]
        TRMAudiostem.TRMWebServiceJson.Artist GetArtist(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetArtist", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetArtistResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Artist> GetArtistAsync(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetBusiness", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetBusinessResponse")]
        TRMAudiostem.TRMWebServiceJson.Business GetBusiness(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetBusiness", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetBusinessResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Business> GetBusinessAsync(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetCustomer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetCustomerResponse")]
        TRMAudiostem.TRMWebServiceJson.Customer GetCustomer(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/GetCustomer", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/GetCustomerResponse")]
        System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Customer> GetCustomerAsync(int wordpressUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteUser", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteUserResponse")]
        bool DeleteUser(TRMAudiostem.TRMWebServiceJson.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITRMWCFWebServiceJson/DeleteUser", ReplyAction="http://tempuri.org/ITRMWCFWebServiceJson/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(TRMAudiostem.TRMWebServiceJson.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITRMWCFWebServiceJsonChannel : TRMAudiostem.TRMWebServiceJson.ITRMWCFWebServiceJson, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TRMWCFWebServiceJsonClient : System.ServiceModel.ClientBase<TRMAudiostem.TRMWebServiceJson.ITRMWCFWebServiceJson>, TRMAudiostem.TRMWebServiceJson.ITRMWCFWebServiceJson {
        
        public TRMWCFWebServiceJsonClient() {
        }
        
        public TRMWCFWebServiceJsonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TRMWCFWebServiceJsonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TRMWCFWebServiceJsonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TRMWCFWebServiceJsonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SaveUserAccount(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList accountType) {
            return base.Channel.SaveUserAccount(user, accountType);
        }
        
        public System.Threading.Tasks.Task<bool> SaveUserAccountAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.Account.AccountTypeList accountType) {
            return base.Channel.SaveUserAccountAsync(user, accountType);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Account GetUserAccount(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.GetUserAccount(user);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Account> GetUserAccountAsync(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.GetUserAccountAsync(user);
        }
        
        public bool DeleteAccount(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.DeleteAccount(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAccountAsync(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.DeleteAccountAsync(user);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Artist[] GetAllArtists() {
            return base.Channel.GetAllArtists();
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Artist[]> GetAllArtistsAsync() {
            return base.Channel.GetAllArtistsAsync();
        }
        
        public bool SaveArtistAlbum(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile) {
            return base.Channel.SaveArtistAlbum(album, artist, sourceFile);
        }
        
        public System.Threading.Tasks.Task<bool> SaveArtistAlbumAsync(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile) {
            return base.Channel.SaveArtistAlbumAsync(album, artist, sourceFile);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Album[] GetArtistAlbums(TRMAudiostem.TRMWebServiceJson.Artist artist) {
            return base.Channel.GetArtistAlbums(artist);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Album[]> GetArtistAlbumsAsync(TRMAudiostem.TRMWebServiceJson.Artist artist) {
            return base.Channel.GetArtistAlbumsAsync(artist);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Album GetArtistAlbumDetails(int albumId) {
            return base.Channel.GetArtistAlbumDetails(albumId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Album> GetArtistAlbumDetailsAsync(int albumId) {
            return base.Channel.GetArtistAlbumDetailsAsync(albumId);
        }
        
        public bool DeleteArtistAlbum(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist) {
            return base.Channel.DeleteArtistAlbum(album, artist);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteArtistAlbumAsync(TRMAudiostem.TRMWebServiceJson.Album album, TRMAudiostem.TRMWebServiceJson.Artist artist) {
            return base.Channel.DeleteArtistAlbumAsync(album, artist);
        }
        
        public bool UpdateAlbumGenreCollection(int albumId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection) {
            return base.Channel.UpdateAlbumGenreCollection(albumId, genreCollection);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAlbumGenreCollectionAsync(int albumId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection) {
            return base.Channel.UpdateAlbumGenreCollectionAsync(albumId, genreCollection);
        }
        
        public bool UploadSong(TRMAudiostem.TRMWebServiceJson.Song song, string filePath, string ext, string folderName) {
            return base.Channel.UploadSong(song, filePath, ext, folderName);
        }
        
        public System.Threading.Tasks.Task<bool> UploadSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, string filePath, string ext, string folderName) {
            return base.Channel.UploadSongAsync(song, filePath, ext, folderName);
        }
        
        public string DownloadSongOnServer(int songId) {
            return base.Channel.DownloadSongOnServer(songId);
        }
        
        public System.Threading.Tasks.Task<string> DownloadSongOnServerAsync(int songId) {
            return base.Channel.DownloadSongOnServerAsync(songId);
        }
        
        public System.IO.Stream DownloadFile(string filePath) {
            return base.Channel.DownloadFile(filePath);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(string filePath) {
            return base.Channel.DownloadFileAsync(filePath);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Song[] GetAllSongs() {
            return base.Channel.GetAllSongs();
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetAllSongsAsync() {
            return base.Channel.GetAllSongsAsync();
        }
        
        public TRMAudiostem.TRMWebServiceJson.Song[] GetAlbumSongs(int albumId) {
            return base.Channel.GetAlbumSongs(albumId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetAlbumSongsAsync(int albumId) {
            return base.Channel.GetAlbumSongsAsync(albumId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Song[] GetArtistSongs(int wordpressUserId) {
            return base.Channel.GetArtistSongs(wordpressUserId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song[]> GetArtistSongsAsync(int wordpressUserId) {
            return base.Channel.GetArtistSongsAsync(wordpressUserId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Song GetArtistSongDetails(int songId) {
            return base.Channel.GetArtistSongDetails(songId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Song> GetArtistSongDetailsAsync(int songId) {
            return base.Channel.GetArtistSongDetailsAsync(songId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.MediaAsset[] GetSongMediaAssets(int songId) {
            return base.Channel.GetSongMediaAssets(songId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.MediaAsset[]> GetSongMediaAssetsAsync(int songId) {
            return base.Channel.GetSongMediaAssetsAsync(songId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.MediaAsset[] GetSongMediaAssetsForDownload(int songId) {
            return base.Channel.GetSongMediaAssetsForDownload(songId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.MediaAsset[]> GetSongMediaAssetsForDownloadAsync(int songId) {
            return base.Channel.GetSongMediaAssetsForDownloadAsync(songId);
        }
        
        public bool DeleteSong(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album) {
            return base.Channel.DeleteSong(song, album);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album) {
            return base.Channel.DeleteSongAsync(song, album);
        }
        
        public bool DeleteAlbumSong(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album) {
            return base.Channel.DeleteAlbumSong(song, album);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAlbumSongAsync(TRMAudiostem.TRMWebServiceJson.Song song, TRMAudiostem.TRMWebServiceJson.Album album) {
            return base.Channel.DeleteAlbumSongAsync(song, album);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Business[] GetAllBusinesses() {
            return base.Channel.GetAllBusinesses();
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Business[]> GetAllBusinessesAsync() {
            return base.Channel.GetAllBusinessesAsync();
        }
        
        public bool SavePlaylist(int wordpressUserId, TRMAudiostem.TRMWebServiceJson.Playlist playlist) {
            return base.Channel.SavePlaylist(wordpressUserId, playlist);
        }
        
        public System.Threading.Tasks.Task<bool> SavePlaylistAsync(int wordpressUserId, TRMAudiostem.TRMWebServiceJson.Playlist playlist) {
            return base.Channel.SavePlaylistAsync(wordpressUserId, playlist);
        }
        
        public bool DeletePlaylist(int playlistId) {
            return base.Channel.DeletePlaylist(playlistId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePlaylistAsync(int playlistId) {
            return base.Channel.DeletePlaylistAsync(playlistId);
        }
        
        public bool DeletePlaylistSong(int songId, int playlistId) {
            return base.Channel.DeletePlaylistSong(songId, playlistId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePlaylistSongAsync(int songId, int playlistId) {
            return base.Channel.DeletePlaylistSongAsync(songId, playlistId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.BusinessType[] GetAllBusinessTypes() {
            return base.Channel.GetAllBusinessTypes();
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.BusinessType[]> GetAllBusinessTypesAsync() {
            return base.Channel.GetAllBusinessTypesAsync();
        }
        
        public TRMAudiostem.TRMWebServiceJson.Genre[] GetAllGenres() {
            return base.Channel.GetAllGenres();
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Genre[]> GetAllGenresAsync() {
            return base.Channel.GetAllGenresAsync();
        }
        
        public TRMAudiostem.TRMWebServiceJson.Genre GetGenre(int genreId) {
            return base.Channel.GetGenre(genreId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Genre> GetGenreAsync(int genreId) {
            return base.Channel.GetGenreAsync(genreId);
        }
        
        public bool RegisterAdmin(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.RegisterAdmin(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAdminAsync(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.RegisterAdminAsync(user);
        }
        
        public bool RegisterArtist(TRMAudiostem.TRMWebServiceJson.Artist user, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile) {
            return base.Channel.RegisterArtist(user, genreCollection, sourceFile);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterArtistAsync(TRMAudiostem.TRMWebServiceJson.Artist user, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection, TRMAudiostem.TRMWebServiceJson.HttpPostedFileBase sourceFile) {
            return base.Channel.RegisterArtistAsync(user, genreCollection, sourceFile);
        }
        
        public bool RegisterBusiness(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude) {
            return base.Channel.RegisterBusiness(user, businessType, latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterBusinessAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude) {
            return base.Channel.RegisterBusinessAsync(user, businessType, latitude, longitude);
        }
        
        public bool RegisterCustomer(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.RegisterCustomer(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterCustomerAsync(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.RegisterCustomerAsync(user);
        }
        
        public bool UpdateBusinessUser(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude) {
            return base.Channel.UpdateBusinessUser(user, businessType, latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBusinessUserAsync(TRMAudiostem.TRMWebServiceJson.User user, TRMAudiostem.TRMWebServiceJson.BusinessType businessType, string latitude, string longitude) {
            return base.Channel.UpdateBusinessUserAsync(user, businessType, latitude, longitude);
        }
        
        public bool UpdateArtistGenreCollection(int userId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection) {
            return base.Channel.UpdateArtistGenreCollection(userId, genreCollection);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateArtistGenreCollectionAsync(int userId, TRMAudiostem.TRMWebServiceJson.Genre[] genreCollection) {
            return base.Channel.UpdateArtistGenreCollectionAsync(userId, genreCollection);
        }
        
        public TRMAudiostem.TRMWebServiceJson.User GetUserByUserId(int userId) {
            return base.Channel.GetUserByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.User> GetUserByUserIdAsync(int userId) {
            return base.Channel.GetUserByUserIdAsync(userId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Admin GetAdmin(int wordpressUserId) {
            return base.Channel.GetAdmin(wordpressUserId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Admin> GetAdminAsync(int wordpressUserId) {
            return base.Channel.GetAdminAsync(wordpressUserId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Artist GetArtist(int wordpressUserId) {
            return base.Channel.GetArtist(wordpressUserId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Artist> GetArtistAsync(int wordpressUserId) {
            return base.Channel.GetArtistAsync(wordpressUserId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Business GetBusiness(int wordpressUserId) {
            return base.Channel.GetBusiness(wordpressUserId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Business> GetBusinessAsync(int wordpressUserId) {
            return base.Channel.GetBusinessAsync(wordpressUserId);
        }
        
        public TRMAudiostem.TRMWebServiceJson.Customer GetCustomer(int wordpressUserId) {
            return base.Channel.GetCustomer(wordpressUserId);
        }
        
        public System.Threading.Tasks.Task<TRMAudiostem.TRMWebServiceJson.Customer> GetCustomerAsync(int wordpressUserId) {
            return base.Channel.GetCustomerAsync(wordpressUserId);
        }
        
        public bool DeleteUser(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(TRMAudiostem.TRMWebServiceJson.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
    }
}
