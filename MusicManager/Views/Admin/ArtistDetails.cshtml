@model DomainModel.Entities.Artist

@{
    ViewBag.Title = "Edit your personal details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<p class="message-success">@ViewBag.StatusMessage</p>
@Html.ActionLink("<-- Go back to profile page", "ArtistProfile", new { userId = Model.UserId })

<nav>
    <ul id="menu">
        <li>@Html.ActionLink("Albums", "ArtistAlbums", "Admin", new { userId = Model.UserId }, null)</li>
        <li>@Html.ActionLink("Songs", "ArtistSongs", "Admin", new { userId = Model.UserId }, null)</li>
        <li>@Html.ActionLink("Personal Details", "ArtistDetails", "Admin", new { userId = Model.UserId }, null)</li>
    </ul>
</nav>

@{
    var WCFWebServiceJson = new WebService.WCFWebServiceJson();
    var genreList = WCFWebServiceJson.GetAllGenres();
    var profileImagePath = string.Empty;
    if (Model != null)
    {
        profileImagePath = PlayLift.PlayLiftBase.StreamingUrl + Model.ProfileImage;
    }

    <fieldset class="registrationForm">
        <legend>Personal Details</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.ArtistName)
                @Html.TextBoxFor(m => m.ArtistName, new { disabled = "disabled" })
            </li>
            <li>
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)
            </li>
            <li>
                @Html.LabelFor(m => m.Website)
                @Html.TextBoxFor(m => m.Website)
            </li>
            <li>
                @Html.LabelFor(m => m.SoundCloud)
                @Html.TextBoxFor(m => m.SoundCloud)
            </li>
            <li>
                @Html.LabelFor(m => m.Facebook)
                @Html.TextBoxFor(m => m.Facebook)
            </li>
            <li>
                @Html.LabelFor(m => m.Twitter)
                @Html.TextBoxFor(m => m.Twitter)
            </li>
            <li>
                @Html.LabelFor(m => m.MySpace)
                @Html.TextBoxFor(m => m.MySpace)
            </li>  
            <li>
                @Html.Label("Royalties Collection Agency Status")

                @if (Model.PRS) 
                {
                    @Html.CheckBoxFor(m => m.PRS, new { @class = "royalty", id = "prs", onchange = "validateRoyalty('prs');", @checked = "checked" })
                    <span>PRS registered</span>
                    <br />
                    @Html.CheckBoxFor(m => m.CreativeCommonsLicence, new { @class = "royalty", id = "cc", onchange = "validateRoyalty('cc');", disabled = "disabled" })
                    <span>Creative Commons Licence</span>
                }
                else if (Model.CreativeCommonsLicence)
                {
                    @Html.CheckBoxFor(m => m.PRS, new { @class = "royalty", id = "prs", onchange = "validateRoyalty('prs');", disabled = "disabled" })
                    <span>PRS registered</span>
                    <br />
                    @Html.CheckBoxFor(m => m.CreativeCommonsLicence, new { @class = "royalty", id = "cc", onchange = "validateRoyalty('cc');", @checked = "checked" })
                    <span>Creative Commons Licence</span>
                }
                else if (!Model.PRS && !Model.CreativeCommonsLicence)
                {
                    @Html.CheckBoxFor(m => m.PRS, new { @class = "royalty", id = "prs", onchange = "validateRoyalty('prs');" })
                    <span>PRS registered</span>
                    <br />
                    @Html.CheckBoxFor(m => m.CreativeCommonsLicence, new { @class = "royalty", id = "cc", onchange = "validateRoyalty('cc');" })
                    <span>Creative Commons Licence</span>
                }
            </li>
                @Html.LabelFor(m => m.GenreCollection)
                @{
                    if (Model != null)
                    {
                        foreach (var artistGenre in Model.GenreCollection)
                        {
                            foreach (var genre in genreList)
                            {
                                if (genre.GenreId == artistGenre.GenreId)
                                {
                                    genre.Selected = true;
                                }
                            }
                        }
                    }

                    Html.RenderPartial("GenreList", genreList);
                }
        </ol>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/trm/scripts")
}